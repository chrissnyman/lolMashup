<%= content_for :head do %>
    <title>New Group | LoL Mashup</title>
<% end %>

<%= content_for :content do %>
    <%= render 'shared/navbar' %>
    <div class="container">
        <div class="card border-primary ">
            <div class="card-header bg-dark"><h1 class='text-center'><%= @group.name%> <span class="badge badge-success"><%= @group.region.upcase%></span></h1></div>
            <div class="card-body bg-light">
                <h4 class="card-title ">
                    <div class="row">
                        <div class="col-6 text-right">Game Mode:</div>
                        <div class="col-6">
                            <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"><%= @group.game_mode.present? ? @group.game_mode.name : 'None' %></a>
                            <div class="dropdown-menu">
                                <% GameMode.all.each do |cur_mode| %>
                                    <a class="dropdown-item" href="/group/<%= @group.uuid %>/change_game_mode/<%= cur_mode.id %>"><%= cur_mode.name %></a>
                                <% end%>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 text-right">Players:</div>
                        <div class="col-6"> <%= @group.summoner_match_groups.count%> / <%= @group.size%></div>
                        
                    </div>
                </h4>
                <hr>
                <p class="card-text ">
                    <div class="row">
                        <div class="col-3"></div>
                        <div class="col-6">
                            <% if @group.summoner_match_groups.count < @group.size %>
                                
                                <form class="form-inline" method="post" action="/group/add_summoner" >
                                    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                                    <%= hidden_field_tag :uuid, @group.uuid %>
                                    <%= hidden_field_tag :region, @group.region %>
                                    <label class="mr-sm-2" >Add Summoner:</label>
                                    <input class="form-control " required type="text" id="summoner_name" name="summoner_name" placeholder="Summoner Name" >
                                    <button class="btn btn-secondary" type="submit">Add</button>
                                </form>
                            <% else %>
                                    <a href="/group/<%= @group.uuid %>/roll" class="btn btn-primary btn-block">Roll team</a>
                            <% end %>
                        </div>
                        <div class="col-3"></div>
                    </div>
                </p>
            </div>
        </div>
        <%= render 'shared/notices' %>
    </div>
    <div class="container-fluid mt-5">
        <div class='row'>
            <% if @group.summoner_match_groups.count == @group.size %>
                <% @group.summoner_match_groups.includes(:roll_result).order('roll_results.lane_role_id, roll_results.team').each_with_index do |summoner_match_group,index| %>
                    <%= render 'summoner_card', :locals => {:index => index, group: @group, summoner_match_group: summoner_match_group } %>
                <% end %>
            <% else %>
                <% @group.summoner_match_groups.each_with_index do |summoner_match_group,index| %>
                    <%= render 'summoner_card', :locals => {:index => index, group: @group, summoner_match_group: summoner_match_group } %>
                <% end %>
            <% end %>
        </div>
    </div>
    <script>
        var last_update_time = <%= @group.updated_at.to_i %>;
        var refresh_delay = <%= @refresh_delay %>;
        function check_reload() {
            $.get('/group/<%= @group.uuid %>/last_updated', function(response) {
                // console.log('check_reload', response);
                if (last_update_time != response) {
                    location.reload();
                    // console.log('reload!');
                }
                wait_check_reload();
            })
        }
        function wait_check_reload() {
            setTimeout(() => {
                check_reload();
            }, refresh_delay);
        }
        wait_check_reload();
    </script>
<% end %>